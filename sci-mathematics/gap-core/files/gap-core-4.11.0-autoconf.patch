diff --git a/Makefile.rules b/Makefile.rules
index c2971b2..3c04e8b 100644
--- a/Makefile.rules
+++ b/Makefile.rules
@@ -483,20 +483,22 @@ clean:
 
 LTINSTALL=$(LIBTOOL) --mode=install $(INSTALL)
 
-install:
-	@echo "Error, 'make install' has not yet been implemented"
-	exit 1
+install: install-bin install-libgap install-headers install-gaproot
 
 install-bin:
-	@echo "Warning, 'make install-bin' is incomplete"
 	$(INSTALL) -d -m 0755 $(DESTDIR)$(bindir)
-	$(INSTALL) -m 0755 gap $(DESTDIR)$(bindir)/gap.real
-	echo "!/bin/sh\nexec \"$(bindir)/gap.real\" -l \"$(datarootdir)/gap\" \"$@\"" > gap-wrapper.sh
-	$(INSTALL) -m 0755 gap-wrapper.sh $(DESTDIR)$(bindir)/gap
-	# TODO: make gac installable; this requires adjusting path in it, and
-	# installing the libtool script generated by configure somewhere; and then
-	# putting that path to it into gac)
-	#$(INSTALL) gac $(DESTDIR)$(bindir)
+	$(INSTALL) -m 0755 gap $(DESTDIR)$(datarootdir)/gap
+	echo "!/bin/sh\nexec \"$(datarootdir)/gap\" -l \"$(datarootdir)/gap\" \"$@\"" > gap
+	$(INSTALL) -m 0755 gap $(DESTDIR)$(bindir)
+	sed -e "s:^abs_top_builddir=.*$:abs_top_builddir=\"$(datarootdir)/gap\":" \
+	    -e "s:^abs_top_srcdir=.*$:abs_top_srcdir=\"$(datarootdir)/gap\":" \
+	    -i gac
+	$(INSTALL) -m 0755 gac $(DESTDIR)$(bindir)
+
+install-libgap: libgap.la
+	@echo "Warning, 'make install-libgap' is incomplete"
+	$(INSTALL) -d -m 0755 $(DESTDIR)$(libdir)
+	$(LTINSTALL) libgap.la $(DESTDIR)$(libdir)
 
 install-gaproot:
 	@echo "Warning, 'make install-gaproot' is incomplete"
@@ -538,11 +540,6 @@ install-headers:
 	$(INSTALL) -m 0644 $(srcdir)/src/hpc/*.h $(DESTDIR)$(includedir)/gap/hpc
 	# TODO: take care of config.h, this is difficult
 
-install-libgap: libgap.la
-	@echo "Warning, 'make install-libgap' is incomplete"
-	$(INSTALL) -d -m 0755 $(DESTDIR)$(libdir)
-	$(LTINSTALL) libgap.la $(DESTDIR)$(libdir)
-
 
 .PHONY: install install-bin install-gaproot install-headers install-libgap
 
diff --git a/configure.ac b/configure.ac
index 938fcd3..b3b2340 100644
--- a/configure.ac
+++ b/configure.ac
@@ -6,6 +6,7 @@ AC_INIT([GAP], [4.dev], [support@gap-system.org], [gap], [https://www.gap-system
 
 AC_CONFIG_SRCDIR([src/gap.c])
 AC_CONFIG_AUX_DIR([cnf])
+AC_CONFIG_MACRO_DIR([m4])
 
 AC_CONFIG_HEADERS([gen/config.h:src/config.h.in])
 AC_CONFIG_COMMANDS([gen/stamp-h], [echo timestamp > gen/stamp-h])
@@ -207,29 +208,41 @@ dnl User setting: Debug mode (off by default)
 dnl
 AC_ARG_ENABLE([debug],
     [AS_HELP_STRING([--enable-debug], [enable debug mode])],
-    [AC_DEFINE([GAP_KERNEL_DEBUG], [1], [define if building in debug mode])
-     AC_DEFINE([GAP_PRINT_BACKTRACE], [1], [to enable backtraces upon crashes])],
+    [],
     [enable_debug=no]
     )
 AC_MSG_CHECKING([whether to enable debug mode])
 AC_MSG_RESULT([$enable_debug])
 
+AS_IF([test "x$enable_debug" != "xno"],
+    [AC_DEFINE([GAP_KERNEL_DEBUG], [1], [define if building in debug mode])
+     AC_DEFINE([GAP_PRINT_BACKTRACE], [1], [to enable backtraces upon crashes])],
+) 
+
 AC_ARG_ENABLE([memory-checking],
     [AS_HELP_STRING([--enable-memory-checking], [enable memory checking])],
-    [AC_DEFINE([GAP_MEM_CHECK], [1], [define if building with memory checking])],
+    [],
     [enable_memory_checking=no]
     )
 AC_MSG_CHECKING([whether to enable memory checking])
 AC_MSG_RESULT([$enable_memory_checking])
 
+AS_IF([test "x$enable_memory_checking" != "xno"],
+  [AC_DEFINE([GAP_MEM_CHECK], [1], [define if building with memory checking])]
+)
+
 AC_ARG_ENABLE([valgrind],
     [AS_HELP_STRING([--enable-valgrind], [enable valgrind extensions to GASMAN])],
-    [AC_DEFINE([GAP_MEMORY_CANARY], [1], [define if building with valgrind extensions])],
+    [],
     [enable_valgrind=no]
     )
 AC_MSG_CHECKING([whether to enable valgrind extensions to GASMAN])
 AC_MSG_RESULT([$enable_valgrind])
 
+AS_IF([test "x$enable_valgrind" != "xno"],
+  [AC_DEFINE([GAP_MEMORY_CANARY], [1], [define if building with valgrind extensions])]
+)
+
 if test "x$enable_valgrind" != "xno" -a "x$enable_memory_checking" != "xno"; then
     AC_MSG_ERROR([--enable-valgrind and --enable-memory-checking cannot be used at the same time])
 fi
@@ -549,10 +562,9 @@ AS_IF([test "x$with_gc" = xboehm],
   #
   # As a side benefit, users do not have to worry about installing dependencies.
 
-  BUILD_LIBATOMIC_OPS=yes
-  LIBATOMIC_OPS_CPPFLAGS='-I${abs_builddir}/extern/install/libatomic_ops/include'
-  LIBATOMIC_OPS_LDFLAGS='${abs_builddir}/extern/install/libatomic_ops/lib/libatomic_ops.la'
-  LIBATOMIC_OPS_LIBS=
+  BUILD_LIBATOMIC_OPS=no
+  #PKG_CHECK_MODULES([LIBATOMIC_OPS], [atomic_ops])
+
   AC_SUBST([BUILD_LIBATOMIC_OPS])
   AC_SUBST([LIBATOMIC_OPS_CPPFLAGS])
   AC_SUBST([LIBATOMIC_OPS_LDFLAGS])
@@ -561,11 +573,8 @@ AS_IF([test "x$with_gc" = xboehm],
   ATOMIC_OPS_CFLAGS=$LIBATOMIC_OPS_CPPFLAGS
   ATOMIC_OPS_LIBS=$LIBATOMIC_OPS_LDFLAGS
 
-
-  BUILD_BOEHM_GC=yes
-  BOEHM_GC_CPPFLAGS='-I${abs_builddir}/extern/install/gc/include'
-  BOEHM_GC_LDFLAGS='${abs_builddir}/extern/install/gc/lib/libgc.la'
-  BOEHM_GC_LIBS=
+  BUILD_BOEHM_GC=no
+  #PKG_CHECK_MODULES([BOEHM_GC], [bdw-gc])
   AC_SUBST([BUILD_BOEHM_GC])
   AC_SUBST([BOEHM_GC_CPPFLAGS])
   AC_SUBST([BOEHM_GC_LDFLAGS])
